// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package ru.bashmag.khakimulin.reportmonitor.screens.reportlist.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import ru.bashmag.khakimulin.reportmonitor.screens.reportlist.ReportListActivity;

public final class ReportListModule_ProvideContextFactory implements Factory<ReportListActivity> {
  private final ReportListModule module;

  public ReportListModule_ProvideContextFactory(ReportListModule module) {
    assert module != null;
    this.module = module;
  }

  @Override
  public ReportListActivity get() {
    return Preconditions.checkNotNull(
        module.provideContext(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<ReportListActivity> create(ReportListModule module) {
    return new ReportListModule_ProvideContextFactory(module);
  }

  /** Proxies {@link ReportListModule#provideContext()}. */
  public static ReportListActivity proxyProvideContext(ReportListModule instance) {
    return instance.provideContext();
  }
}
