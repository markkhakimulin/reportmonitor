// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package ru.bashmag.khakimulin.reportmonitor.screens.reports.conversion.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import ru.bashmag.khakimulin.reportmonitor.screens.reports.conversion.mvp.ConversionPresenter;

public final class ConversionModule_ProvidePresenterFactory
    implements Factory<ConversionPresenter> {
  private final ConversionModule module;

  public ConversionModule_ProvidePresenterFactory(ConversionModule module) {
    assert module != null;
    this.module = module;
  }

  @Override
  public ConversionPresenter get() {
    return Preconditions.checkNotNull(
        module.providePresenter(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<ConversionPresenter> create(ConversionModule module) {
    return new ConversionModule_ProvidePresenterFactory(module);
  }

  /** Proxies {@link ConversionModule#providePresenter()}. */
  public static ConversionPresenter proxyProvidePresenter(ConversionModule instance) {
    return instance.providePresenter();
  }
}
