// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package ru.bashmag.khakimulin.reportmonitor.screens.splash.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import ru.bashmag.khakimulin.reportmonitor.screens.splash.mvp.SplashPresenter;

public final class SplashModule_ProvidePresenterFactory implements Factory<SplashPresenter> {
  private final SplashModule module;

  public SplashModule_ProvidePresenterFactory(SplashModule module) {
    assert module != null;
    this.module = module;
  }

  @Override
  public SplashPresenter get() {
    return Preconditions.checkNotNull(
        module.providePresenter(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<SplashPresenter> create(SplashModule module) {
    return new SplashModule_ProvidePresenterFactory(module);
  }

  /** Proxies {@link SplashModule#providePresenter()}. */
  public static SplashPresenter proxyProvidePresenter(SplashModule instance) {
    return instance.providePresenter();
  }
}
