// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package ru.bashmag.khakimulin.reportmonitor.core;

import android.content.SharedPreferences;
import dagger.MembersInjector;
import javax.inject.Provider;
import rx.subscriptions.CompositeSubscription;

public final class BaseActivity_MembersInjector implements MembersInjector<BaseActivity> {
  private final Provider<BasePresenter> presenterProvider;

  private final Provider<CompositeSubscription> subscriptionsProvider;

  private final Provider<SharedPreferences> spProvider;

  public BaseActivity_MembersInjector(
      Provider<BasePresenter> presenterProvider,
      Provider<CompositeSubscription> subscriptionsProvider,
      Provider<SharedPreferences> spProvider) {
    assert presenterProvider != null;
    this.presenterProvider = presenterProvider;
    assert subscriptionsProvider != null;
    this.subscriptionsProvider = subscriptionsProvider;
    assert spProvider != null;
    this.spProvider = spProvider;
  }

  public static MembersInjector<BaseActivity> create(
      Provider<BasePresenter> presenterProvider,
      Provider<CompositeSubscription> subscriptionsProvider,
      Provider<SharedPreferences> spProvider) {
    return new BaseActivity_MembersInjector(presenterProvider, subscriptionsProvider, spProvider);
  }

  @Override
  public void injectMembers(BaseActivity instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.presenter = presenterProvider.get();
    instance.subscriptions = subscriptionsProvider.get();
    instance.sp = spProvider.get();
  }
}
