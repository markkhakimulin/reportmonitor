// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package ru.bashmag.khakimulin.reportmonitor.screens.splash.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import ru.bashmag.khakimulin.reportmonitor.screens.splash.SplashActivity;

public final class SplashModule_ProvideSplashContextFactory implements Factory<SplashActivity> {
  private final SplashModule module;

  public SplashModule_ProvideSplashContextFactory(SplashModule module) {
    assert module != null;
    this.module = module;
  }

  @Override
  public SplashActivity get() {
    return Preconditions.checkNotNull(
        module.provideSplashContext(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<SplashActivity> create(SplashModule module) {
    return new SplashModule_ProvideSplashContextFactory(module);
  }

  /** Proxies {@link SplashModule#provideSplashContext()}. */
  public static SplashActivity proxyProvideSplashContext(SplashModule instance) {
    return instance.provideSplashContext();
  }
}
