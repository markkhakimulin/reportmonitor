// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package ru.bashmag.khakimulin.reportmonitor.screens.reports.sales.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import ru.bashmag.khakimulin.reportmonitor.screens.reports.sales.mvp.SalesModel;

public final class SalesModule_ProvideModelDummyFactory implements Factory<SalesModel> {
  private final SalesModule module;

  public SalesModule_ProvideModelDummyFactory(SalesModule module) {
    assert module != null;
    this.module = module;
  }

  @Override
  public SalesModel get() {
    return Preconditions.checkNotNull(
        module.provideModelDummy(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<SalesModel> create(SalesModule module) {
    return new SalesModule_ProvideModelDummyFactory(module);
  }

  /** Proxies {@link SalesModule#provideModelDummy()}. */
  public static SalesModel proxyProvideModelDummy(SalesModule instance) {
    return instance.provideModelDummy();
  }
}
